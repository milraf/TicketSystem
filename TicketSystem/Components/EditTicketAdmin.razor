@using TicketSystem.Managers
@inject TicketManager ticketManager
@inject NavigationManager nav

<EditForm Model="ticketModel" OnValidSubmit="EditTicket">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="Title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="ticketModel.Title" placeholder="Ticket"></InputText>
    </div>
    <div div class="mb-3">
        <label for="description">Description</label>
        <InputTextArea id="description" class="form-control" style="height: 16rem; resize: none" @bind-Value="ticketModel.Description" placeholder="Description"></InputTextArea>
    </div>
    <div div class="mb-3">
        <label for="status">Ticket status</label>
        <InputSelect id="status" class="form-control" @bind-Value="ticketModel.Status">
        <option value="@TicketStatus.Open">@Enum.GetName(typeof(TicketStatus), TicketStatus.Open)</option>
        <option value="@TicketStatus.Urgent">@Enum.GetName(typeof(TicketStatus), TicketStatus.Urgent)</option>
        <option value="@TicketStatus.CurrentlyProcessed">@Enum.GetName(typeof(TicketStatus), TicketStatus.CurrentlyProcessed)</option>
        <option value="@TicketStatus.Solved">@Enum.GetName(typeof(TicketStatus), TicketStatus.Solved)</option>
    </InputSelect>
    </div>
    <button class="btn btn-outline-primary" type="submit">Edit ticket</button>
</EditForm>

@code {
    [Parameter] 
    public int Id { get; set; }

    DisplayAdminTicketModel ticketModel = new DisplayAdminTicketModel();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var ticket = ticketManager.GetTicketById(Id);
        ticketModel.Title = ticket.Title;
        ticketModel.Description = ticket.Description;
        ticketModel.Status = (TicketStatus)ticket.Status;
    }

    private async Task EditTicket()
    {
        await ticketManager.EditTicketAdmin(ticketModel, Id);
        nav.NavigateTo("/");
    }
}